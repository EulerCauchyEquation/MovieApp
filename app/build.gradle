plugins {
    id 'com.android.application'
    id "androidx.navigation.safeargs"
    id 'de.mannodermaus.android-junit5'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.hwonchul.movie'
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.hwonchul.movie"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "com.hwonchul.movie.CustomTestRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        buildConfigField "String", "TMDB_API_KEY", '"3ca39f6594586b638e99d3a81bf88803"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    packagingOptions {
        exclude("META-INF/LICENSE*")
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        // <application android:extractNativeLibs="true"/> 와 동일한 효과
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }

    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
        test {
            resources {
                srcDirs 'src\\test\\assets'
            }
        }
    }
}

dependencies {
    // androidX
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "de.hdodenhof:circleimageview:$circleimageview_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinues_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"

    // mapper
    compileOnly "org.projectlombok:lombok:$lombok_version"
    kapt "org.projectlombok:lombok:$lombok_version"
    implementation "org.mapstruct:mapstruct:$mapstruct_version"
    kapt "org.mapstruct:mapstruct-processor:$mapstruct_version"

    // network
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    /* logging */

    // paging 3
    implementation "androidx.paging:paging-runtime:$paging_version"

    // image - glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // navi graph
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$navigation_version"

    // RxJava
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_java_version"

    // room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"  /* Coroutine support */

    // log (timber)
    implementation "com.jakewharton.timber:timber:$timber_version"

    // DI Dagger-hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-fragment:$hil_navigation_fragment_version"

    // Firebase SDK
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation "com.google.firebase:firebase-storage-ktx"

    // Play Integrity API
    implementation "com.google.android.play:integrity:$integrity_version"

    // unit test
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$androidX_test_version"
    testImplementation "androidx.arch.core:core-testing:$androidX_core_testing_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test:rules:$androidX_test_version"

    // junit 5 unit test
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_jupiter_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_jupiter_version"

    // coroutine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinues_version"

    // kotest
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"

    // mockWebServer
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    // room-test
    testImplementation "androidx.room:room-testing:$room_version"

    // unit test mockk
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"

    // hilt test
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"

    // android unit test
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$junit5_version"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$junit5_version"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_jupiter_version"
    androidTestImplementation "org.junit.jupiter:junit-jupiter:$junit5_jupiter_version"

    androidTestImplementation "androidx.test:core:$androidX_test_version"
    androidTestImplementation "androidx.test:runner:$androidX_test_version"
    androidTestImplementation "androidx.test:rules:$androidX_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidX_ext_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidX_ext_version"
    androidTestImplementation "androidx.arch.core:core-testing:$androidX_core_testing_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidX_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidX_espresso_version"
    // 3.4.0 재확인

    // navi test
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_testing_version"

    // hilt test
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
}

